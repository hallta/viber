[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "viber"
version = "0.1.0"
description = "A Flask web application for a hat store"
requires-python = ">=3.8"
dependencies = [
    "Flask>=3.0.0",
    "Werkzeug>=3.0.1",
    "Flask-SQLAlchemy>=3.1.1",
    "SQLAlchemy>=2.0.25",
    "Flask-WTF>=1.2.1",
    "WTForms>=3.1.1",
    "python-dotenv>=1.0.0",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["viber"]

[project.optional-dependencies]
test = [
    "pytest>=6.2.5",
    "pytest-cov>=2.12.1",
    "pytest-pythonpath>=0.7.4",
    "coverage>=7.4.1",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --cov=viber --cov-report=term-missing --no-cov-on-fail --cov-branch"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = [".", "src"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::RuntimeWarning",
]

[tool.coverage.run]
branch = true
source = ["src/viber"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
    "except ImportError:",
    "if False:",
    "if __name__ == \"__main__\":",
    "@abstractmethod",
]

[tool.pycodestyle]
max-line-length = 100
ignore = ["E402", "W503", "W504"]
exclude = [".git", "__pycache__", "build", "dist", "*.egg-info"] 